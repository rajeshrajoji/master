<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">

  


   <!--  <bean id="blogPostDao" class="net.dontdrinkandroot.example.angularrestspringsecurity.dao.blogpost.JpaBlogPostDao">
    </bean> -->

  <!--   <bean id="userDao" class="net.dontdrinkandroot.example.angularrestspringsecurity.dao.user.JpaUserDao">
    </bean>

    <bean id="accessTokenDao"
          class="net.dontdrinkandroot.example.angularrestspringsecurity.dao.accesstoken.JpaAccessTokenDao">
    </bean> -->

 <!--    <bean id="userService" class="net.dontdrinkandroot.example.angularrestspringsecurity.service.DaoUserService">
        <constructor-arg ref="userDao"/>
        <constructor-arg ref="accessTokenDao"/>
    </bean>
 -->
  <!--   <bean id="dataBaseInitializer"
          class="net.dontdrinkandroot.example.angularrestspringsecurity.dao.DataBaseInitializer"
          init-method="initDataBase">
        <constructor-arg ref="userDao"/>
        <constructor-arg ref="blogPostDao"/>
        <constructor-arg ref="passwordEncoder"/>
    </bean>
     -->
<!--     <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/> -->

    <!--
        SPRING SECURITY SETUP
    -->

    <!-- <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
        <constructor-arg value="${app.secret}"/>
    </bean>

    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider user-service-ref="userService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager> -->

  <!--   <security:http
            entry-point-ref="unauthorizedEntryPoint"
            authentication-manager-ref="authenticationManager"
            create-session="stateless">
        <security:csrf disabled="true"/>
        <security:custom-filter ref="authenticationTokenProcessingFilter" position="PRE_AUTH_FILTER"/>
        <security:intercept-url pattern="/rest/user/authenticate" access="permitAll"/>
        <security:intercept-url method="GET" pattern="/rest/blogposts/**" access="hasRole('USER')"/>
        <security:intercept-url method="PUT" pattern="/rest/blogposts/**" access="hasRole('ADMIN')"/>
        <security:intercept-url method="POST" pattern="/rest/blogposts/**" access="hasRole('ADMIN')"/>
        <security:intercept-url method="DELETE" pattern="/rest/blogposts/**" access="hasRole('ADMIN')"/>
    </security:http>
 -->
    <!-- <bean id="unauthorizedEntryPoint"
          class="com.sample.service.UnauthorizedEntryPoint"/> -->

<!--     <bean id="authenticationTokenProcessingFilter"
          class="com.sample.service.AuthenticationTokenProcessingFilter">
        <constructor-arg ref="userService"/>
    </bean>
 -->
<!-- 
   <bean id="userService" class="com.sample.service.UserService">
    <constructor-arg ref="userDao"/>
        <constructor-arg ref="accessTokenDao"/>
    </bean> -->
</beans>
